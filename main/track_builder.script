local common_points = {}

local points_track_1 = {}
local points_track_2 = {}
local index_track_1 = 1
local index_track_2 = 1

local file_path = "/Users/alehzakharau/Documents/Defold/Projects/InfinityRace/data/"
local file_name = "points_1"
local file_name_2 = "points_2"


function init(self)
	msg.post(".", "acquire_input_focus")
	points_track_1 = {}
	points_track_2 = {}
end

function on_message(self, message_id, message, sender)
	if message_id == hash("point") then
		--print("point " .. " track: " .. message.track .. " || " .. message.position )
		common_points[message.id] = {position = message.position, track = message.track, switcher = message.switcher, connector = message.connector, id = message.id }
		if message.track == 1 then
			points_track_1[message.number] = {position = message.position, track = message.track, switcher = message.switcher, connector = message.connector, id = message.id }
		else
			points_track_2[message.number] = {position = message.position, track = message.track, switcher = message.switcher, connector = message.connector, id = message.id }
		end
	end	
end

local function print_track(track)
	for k,v in pairs(track) do
		print(k .. " track: " .. v.track .. " || " .. v.position )
	end
end

local function check_data(track)
	for k,v in pairs(track) do
		for n,m in pairs(track) do
			if v.id ~= m.id and v.position == m.position then
				go.set_position(v.position, "/point_connector_track_2")
				print(v.position)
				print(m.position)
				error("the same coord in track " .. v.id .. ":".. m.id)
			end
		end
	end
end

local function write_track(file_name, track)
	local sepr = ","
	local file = io.open(file_path..file_name, "w")
	for k,v in pairs(track) do
		file:write(k..sepr..v.position.x..sepr..v.position.y..sepr..v.track.."\n")
	end
	file:close()
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then 
		print_track(points_track_1)
		print_track(points_track_2)
		check_data(points_track_1)
		check_data(points_track_2)
		write_track("track_1.txt", points_track_1)
		write_track("track_2.txt", points_track_2)
	end
end